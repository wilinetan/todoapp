{"ast":null,"code":"var _jsxFileName = \"/Users/wiline/Desktop/todo-app/react-app/src/components/Todos.js\";\nimport React, { Component } from 'react'; // import TodoItem from './TodoItem';\n\nimport TodoCategory from './TodoCategory';\nimport PropTypes from 'prop-types'; // create the \"unique\" method that will take \"array\" as an argument, remove duplicate values from an array, and return a new array\n\nconst unique = array => {\n  return array.filter((item, index) => {\n    return array.indexOf(item) === index;\n  });\n};\n\nclass Todos extends Component {\n  render() {\n    // apply the \"unique\" function for the categories array\n    const categories = unique(this.props.todos.map(todo => todo.tag));\n    return React.createElement(\"div\", {\n      className: \"tasklist-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, categories.map(category => React.createElement(TodoCategory, {\n      key: category,\n      category: category,\n      markCompleted: this.props.markCompleted,\n      delTodo: this.props.delTodo // filter array of tasks that will manage by a tag to a category\n      ,\n      todos: this.props.todos.filter(todo => todo.tag === category),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })));\n  }\n\n} //   return <div className=\"tasklist-container\">\n// // make a list for every of user category and pass the \"TaskCategory.js\" component here\n//     {categories.map(category =>\n//       <TaskCategory\n//         key={category}\n//         category={category}\n//         completeTask={completeTask}\n// // filter array of tasks that will manage by a tag to a category\n//         tasks = {tasks.filter(task => task.tag === category)}\n//       />\n//     )}\n//   </div>\n// }\n//   PropTypes\n\n\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markCompleted: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\nexport default Todos; // return this.props.todos.map((todo) => (\n//   <TodoItem key={todo.id} todo={todo} markCompleted={this.props.markCompleted} \n//   delTodo={this.props.delTodo} />\n//   ));","map":{"version":3,"sources":["/Users/wiline/Desktop/todo-app/react-app/src/components/Todos.js"],"names":["React","Component","TodoCategory","PropTypes","unique","array","filter","item","index","indexOf","Todos","render","categories","props","todos","map","todo","tag","category","markCompleted","delTodo","propTypes","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,SAAOA,KAAK,CAACC,MAAN,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,WAAOH,KAAK,CAACI,OAAN,CAAcF,IAAd,MAAwBC,KAA/B;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,MAAME,KAAN,SAAoBT,SAApB,CAA8B;AAE5BU,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,UAAU,GAAGR,MAAM,CAAC,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAIA,IAAI,CAACC,GAAlC,CAAD,CAAzB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,UAAU,CAACG,GAAX,CAAeG,QAAQ,IACtB,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,QAAnB;AAA6B,MAAA,QAAQ,EAAEA,QAAvC;AAAiD,MAAA,aAAa,EAAE,KAAKL,KAAL,CAAWM,aAA3E;AACA,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,OADpB,CAGA;AAHA;AAIA,MAAA,KAAK,EAAI,KAAKP,KAAL,CAAWC,KAAX,CAAiBR,MAAjB,CAAwBU,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaC,QAA7C,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAYC;;AAlByB,C,CAqB9B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACER,KAAK,CAACW,SAAN,GAAkB;AACdP,EAAAA,KAAK,EAAEX,SAAS,CAACE,KAAV,CAAgBiB,UADT;AAEdH,EAAAA,aAAa,EAAEhB,SAAS,CAACoB,IAAV,CAAeD,UAFhB;AAGdF,EAAAA,OAAO,EAAEjB,SAAS,CAACoB,IAAV,CAAeD;AAHV,CAAlB;AAMF,eAAeZ,KAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\n// import TodoItem from './TodoItem';\nimport TodoCategory from './TodoCategory';\nimport PropTypes from 'prop-types';\n\n// create the \"unique\" method that will take \"array\" as an argument, remove duplicate values from an array, and return a new array\nconst unique = array => {\n  return array.filter((item, index) => {\n    return array.indexOf(item) === index\n  })\n}\n\nclass Todos extends Component {\n\n  render() {\n    // apply the \"unique\" function for the categories array\n    const categories = unique(this.props.todos.map(todo => todo.tag))\n\n    return (\n      <div className=\"tasklist-container\">\n        {categories.map(category =>\n          <TodoCategory key={category} category={category} markCompleted={this.props.markCompleted}\n          delTodo={this.props.delTodo}\n\n          // filter array of tasks that will manage by a tag to a category\n          todos = {this.props.todos.filter(todo => todo.tag === category)}\n          /> \n        )}\n      </div>\n    )\n    }\n  }\n\n//   return <div className=\"tasklist-container\">\n// // make a list for every of user category and pass the \"TaskCategory.js\" component here\n//     {categories.map(category =>\n//       <TaskCategory\n//         key={category}\n//         category={category}\n//         completeTask={completeTask}\n\n// // filter array of tasks that will manage by a tag to a category\n//         tasks = {tasks.filter(task => task.tag === category)}\n//       />\n//     )}\n//   </div>\n// }\n\n//   PropTypes\n  Todos.propTypes = {\n      todos: PropTypes.array.isRequired,\n      markCompleted: PropTypes.func.isRequired,\n      delTodo: PropTypes.func.isRequired\n  }\n\nexport default Todos;\n\n// return this.props.todos.map((todo) => (\n//   <TodoItem key={todo.id} todo={todo} markCompleted={this.props.markCompleted} \n//   delTodo={this.props.delTodo} />\n//   ));"]},"metadata":{},"sourceType":"module"}