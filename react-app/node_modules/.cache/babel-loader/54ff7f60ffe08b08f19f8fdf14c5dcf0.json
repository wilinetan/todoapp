{"ast":null,"code":"var _jsxFileName = \"/Users/wiline/Desktop/todo-app/react-app/src/components/TodoCategory.js\";\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\nexport class TodoCategory extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, category), React.createElement(\"u1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, this.props.todos.map(todo => React.createElement(TodoItem, {\n      key: todo.id,\n      todo: todo,\n      markCompleted: this.props.todo.markComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })), \";\"));\n  }\n\n} //   PropTypes\n\nTodoCategory.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markCompleted: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\nexport default TodoCategory; // class Todos extends Component {\n//   render() {\n//     return this.props.todos.map((todo) => (\n//     <TodoItem key={todo.id} todo={todo} markCompleted={this.props.markCompleted} \n//     delTodo={this.props.delTodo} />\n//     ));\n//   }\n// }\n// //   PropTypes\n// Todos.propTypes = {\n//     todos: PropTypes.array.isRequired,\n//     markCompleted: PropTypes.func.isRequired,\n//     delTodo: PropTypes.func.isRequired\n// }\n// render() {\n//   const { id, title, completed } = this.props.todo;\n//   return (\n//       <div style={this.getStyle()}>\n//           <p>\n//               <input type=\"checkbox\" onChange={this.props.markCompleted.bind(this, id, completed)} /> {' '}\n//               { title }\n//               <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\n//               </p>\n//       </div>\n//   )\n// }\n// import React from 'react';\n// import `Task.js` component\n// import { Task } from './Task.js';\n// add states and actions into TaskCategory.js to handle them\n// export const TaskCategory = ({category, tasks, completeTask}) => {\n//   return <div>\n// the \"category\" will render a \"tag\" name and sort tasks by tags\n// {/* <h2>{category}</h2> */}\n// take and add here this code snippet from \"TaskList.js\"\n//     {/* <ul>\n//     {tasks.map(task =>\n//       <li key={task.id}>\n//         <Task task={task} completeTask={completeTask} />\n//       </li>\n//     )}\n//     </ul>\n//   </div>\n// } */}","map":{"version":3,"sources":["/Users/wiline/Desktop/todo-app/react-app/src/components/TodoCategory.js"],"names":["React","Component","TodoItem","PropTypes","TodoCategory","render","category","props","todos","map","todo","id","markComplete","propTypes","array","isRequired","markCompleted","func","delTodo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAE1CI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,QAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IACtB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAoC,MAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,IAAX,CAAgBE,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CADH,MAFF,CADF;AAUD;;AAbyC,C,CAgB5C;;AACAR,YAAY,CAACS,SAAb,GAAyB;AACrBL,EAAAA,KAAK,EAAEL,SAAS,CAACW,KAAV,CAAgBC,UADF;AAErBC,EAAAA,aAAa,EAAEb,SAAS,CAACc,IAAV,CAAeF,UAFT;AAGrBG,EAAAA,OAAO,EAAEf,SAAS,CAACc,IAAV,CAAeF;AAHH,CAAzB;AAMA,eAAeX,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACI;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nexport class TodoCategory extends Component {\n\n  render() {\n    return (\n      <div>\n        <h2>{category}</h2>\n        <u1>\n          {this.props.todos.map((todo) => (\n          <TodoItem key={todo.id} todo={todo} markCompleted={this.props.todo.markComplete} /> \n          ))};\n        </u1>\n      </div>\n    )\n  }\n}\n\n//   PropTypes\nTodoCategory.propTypes = {\n    todos: PropTypes.array.isRequired,\n    markCompleted: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n}\n\nexport default TodoCategory\n\n// class Todos extends Component {\n//   render() {\n//     return this.props.todos.map((todo) => (\n//     <TodoItem key={todo.id} todo={todo} markCompleted={this.props.markCompleted} \n//     delTodo={this.props.delTodo} />\n//     ));\n//   }\n// }\n\n// //   PropTypes\n// Todos.propTypes = {\n//     todos: PropTypes.array.isRequired,\n//     markCompleted: PropTypes.func.isRequired,\n//     delTodo: PropTypes.func.isRequired\n// }\n\n// render() {\n//   const { id, title, completed } = this.props.todo;\n//   return (\n//       <div style={this.getStyle()}>\n//           <p>\n//               <input type=\"checkbox\" onChange={this.props.markCompleted.bind(this, id, completed)} /> {' '}\n//               { title }\n//               <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\n//               </p>\n//       </div>\n//   )\n// }\n\n\n\n\n// import React from 'react';\n\n// import `Task.js` component\n// import { Task } from './Task.js';\n\n// add states and actions into TaskCategory.js to handle them\n// export const TaskCategory = ({category, tasks, completeTask}) => {\n//   return <div>\n// the \"category\" will render a \"tag\" name and sort tasks by tags\n    // {/* <h2>{category}</h2> */}\n\n// take and add here this code snippet from \"TaskList.js\"\n//     {/* <ul>\n//     {tasks.map(task =>\n//       <li key={task.id}>\n//         <Task task={task} completeTask={completeTask} />\n//       </li>\n//     )}\n//     </ul>\n//   </div>\n// } */}\n"]},"metadata":{},"sourceType":"module"}