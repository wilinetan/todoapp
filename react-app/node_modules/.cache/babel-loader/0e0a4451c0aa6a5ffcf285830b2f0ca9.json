{"ast":null,"code":"var _jsxFileName = \"/Users/wiline/Desktop/todo-api-v1/todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport axios from 'axios'; // import update from 'immutability-helper';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = (id, title, done) => {\n      axios.put(`/api/v1/todos/${id}`, {\n        title,\n        done\n      }).then(res => this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.done = !todo.done;\n          }\n\n          return todo;\n        })\n      }));\n    };\n\n    this.delTodo = id => {\n      axios.delete(`/api/v1/todos/${id}`).then(res => this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })).catch(error => console.log(error));\n    };\n\n    this.addTodo = title => {\n      axios.post('/api/v1/todos', {\n        title,\n        done: false\n      }).then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      })).catch(error => console.log(error));\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/v1/todos').then(res => {\n      this.setState({\n        todos: res.data\n      });\n    }).catch(error => console.log(error));\n  } // original Toggle Complete\n  // markComplete = (id) => {\n  //   this.setState({ todos: this.state.todos.map(todo => {\n  //     if(todo.id === id) {\n  //       todo.completed = !todo.completed\n  //     }\n  //     return todo;\n  //   })})\n  // }\n  // Toggle Complete\n\n\n  // addTodo = (title) => {\n  //     axios.post('/api/v1/todos', {\n  //       title,\n  //       done: false\n  //       })\n  //     .then(response => {\n  //       const todos = update(this.state.todos, {\n  //         $splice: [[0, 0, response.data]]\n  //       })\n  //       this.setState({\n  //         todos: todos\n  //       })\n  //     })\n  //     .catch(error => console.log(error))        \n  // }\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wiline/Desktop/todo-api-v1/todolist/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Todos","AddTodo","About","axios","App","state","todos","markComplete","id","title","done","put","then","res","setState","map","todo","delTodo","delete","filter","catch","error","console","log","addTodo","post","data","componentDidMount","get","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport axios from 'axios';\n// import update from 'immutability-helper';\n\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    axios.get('/api/v1/todos')\n    .then(res => {\n      this.setState({todos: res.data})\n    })\n    .catch(error => console.log(error))\n  }\n\n  // original Toggle Complete\n  // markComplete = (id) => {\n  //   this.setState({ todos: this.state.todos.map(todo => {\n  //     if(todo.id === id) {\n  //       todo.completed = !todo.completed\n  //     }\n  //     return todo;\n  //   })})\n  // }\n\n  // Toggle Complete\n  markComplete = (id, title, done) => {\n    axios.put(`/api/v1/todos/${id}`, {\n      title,\n      done\n    })\n      .then(res => this.setState({ todos: this.state.todos.map(todo => {\n        if(todo.id === id) {\n          todo.done = !todo.done\n        }\n        return todo;\n      })}))\n  }\n\n  // markComplete = (id) => {\n  //   axios.put(`/api/v1/todos/${id}`, {todo: {done: e.target.checked}})\n  //   .then(response => {\n  //     const todoIndex = this.state.todos.findIndex(x => x.id === response.data.id)\n  //     const todos = update(this.state.todos, {\n  //       [todoIndex]: {$set: response.data}\n  //     })\n  //     this.setState({\n  //       todos: todos\n  //     })\n  //   })\n  //   .catch(error => console.log(error))      \n  // }\n\n  // delTodo = (id) => {\n  //   axios.delete(`/api/v1/todos/${id}`)\n  //   .then(response => {\n  //     const todoIndex = this.state.todos.findIndex(x => x.id === id)\n  //     const todos = update(this.state.todos, {\n  //       $splice: [[todoIndex, 1]]\n  //     })\n  //     this.setState({\n  //       todos: todos\n  //     })\n  //   })\n  //   .catch(error => console.log(error))\n  // }\n\n  // Delete Todo\n  delTodo = (id) => {\n    axios.delete(`/api/v1/todos/${id}`)\n      .then(res => this.setState({ todos: [...this.state.todos.filter\n        (todo => todo.id !== id)] }))\n      .catch(error => console.log(error));\n  }\n\n  // Add Todo\n  addTodo = (title) => {\n    axios.post('/api/v1/todos', {\n      title,\n      done: false\n    })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }))\n      .catch(error => console.log(error));\n  }\n\n  // addTodo = (title) => {\n  //     axios.post('/api/v1/todos', {\n  //       title,\n  //       done: false\n  //       })\n  //     .then(response => {\n  //       const todos = update(this.state.todos, {\n  //         $splice: [[0, 0, response.data]]\n  //       })\n  //       this.setState({\n  //         todos: todos\n  //       })\n  //     })\n  //     .catch(error => console.log(error))        \n  // }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo} />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} /> \n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}